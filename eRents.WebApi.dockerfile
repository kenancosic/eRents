# eRents.WebApi Dockerfile - Generated by eRents CodeGen
# Project Type: WebApi
# Generated on: 2025-07-29 21:25:06

# ===============================================
# STAGE 1: Base Runtime Image
# ===============================================
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
LABEL maintainer="eRents Development Team"
LABEL project="eRents.WebApi"
LABEL version="1.0.0"

WORKDIR /app

# Expose ports for WebApi
EXPOSE 80
EXPOSE 443

# Create non-root user for security
RUN adduser --disabled-password --gecos '' appuser

# Install system dependencies if needed

# ===============================================
# STAGE 2: Build Environment
# ===============================================
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src

# Copy solution file and project files for dependency restoration
COPY ["*.sln", "./"]
COPY ["eRents.Domain/eRents.Domain.csproj", "eRents.Domain/"]
COPY ["eRents.Features/eRents.Features.csproj", "eRents.Features/"]
COPY ["eRents.Shared/eRents.Shared.csproj", "eRents.Shared/"]
COPY ["eRents.WebApi/eRents.WebApi.csproj", "eRents.WebApi/"]

# Restore dependencies
RUN dotnet restore "eRents.WebApi/eRents.WebApi.csproj"

# Copy all source code
COPY . .

# Build the application
WORKDIR "/src/eRents.WebApi"
RUN dotnet build "eRents.WebApi.csproj" -c Release -o /app/build --no-restore

# ===============================================
# STAGE 3: Publish Application
# ===============================================
FROM build AS publish
RUN dotnet publish "eRents.WebApi.csproj" -c Release -o /app/publish /p:UseAppHost=false --no-restore

# ===============================================
# STAGE 4: Final Runtime Image
# ===============================================
FROM base AS final
WORKDIR /app

# Copy published application
COPY --from=publish /app/publish .

# Set ownership and permissions
RUN chown -R appuser:appuser /app
USER appuser

# Health check configuration
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80
ENV ASPNETCORE_HTTPS_PORT=443

# Application entry point
ENTRYPOINT ["dotnet", "eRents.WebApi.dll"]

# ===============================================
# BUILD INSTRUCTIONS
# ===============================================
# To build this image:
# docker build -t erents.webapi -f eRents.WebApi.dockerfile .
#
# To run with docker-compose:
# docker-compose up -d
#
# To run standalone:
# docker run -d -p 80:80 erents.webapi
# ===============================================